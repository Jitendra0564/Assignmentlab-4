using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


public enum ShapeType
{
    Circle,
    Square,
    Triangle
}

public class Geometry
{
    public static double CalculateArea(ShapeType shape, double[] parameters)
    {
        switch (shape)
        {
            case ShapeType.Circle:
                if (parameters.Length < 1)
                    throw new ArgumentException("Circle requires the radius as a parameter.");
                double radius = parameters[0];
                return 3.14* Math.Pow(radius, 2);

            case ShapeType.Square:
                if (parameters.Length < 1)
                    throw new ArgumentException("Square requires the side length as a parameter.");
                double sideLength = parameters[0];
                return Math.Pow(sideLength, 2);

            case ShapeType.Triangle:
                if (parameters.Length < 2)
                    throw new ArgumentException("Triangle requires the base and height as parameters.");
                double baseLength = parameters[0];
                double height = parameters[1];
                return 0.5 * baseLength * height;

            default:
                throw new ArgumentException("Unknown shape type.");
        }
    }
}

class Program
{
    static void Main(string[] args)
    {
        ShapeType shape = ShapeType.Circle;
        double[] parameters = { 5.0 }; // For a circle, provide the radius.

        double area = Geometry.CalculateArea(shape, parameters);

        Console.WriteLine($"The area of the {shape} is: {area}");
        Console.Read();
    }
}
